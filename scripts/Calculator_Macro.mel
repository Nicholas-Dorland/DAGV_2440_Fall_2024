//Add
proc float Add(float $list[])
{
    float $start = $list[0];
    for ($i = 1; $i < size($list); $i++)
    {
        $start += $list[$i];
    }
    print ("The sum is: " + $start + "\n");
    return $start;
}

//Subtract
proc Subtract(float $list[])
{
    float $start = $list[0];
    for ($i = 1; $i < size($list); $i++)
    {
        $start -= $list[$i];
    }
    print ("The total is: " + $start + "\n");
}

//Divide
proc Divide(float $list[])
{
    float $start = $list[0];
    for ($i = 1; $i < size($list); $i++)
    {
        $start /= $list[$i];
    }
    print ("The total is: " + $start + "\n");
}

//Multiply
proc Multiply(float $list[])
{
    float $start = $list[0];
    for ($i = 1; $i < size($list); $i++)
    {
        $start *= $list[$i];
    }
    print ("The total is: " + $start + "\n");
}

//Power
proc Power(float $list[])
{
    float $result = pow ($list[0], $list[1]);
    print ("The total is: " + $result + "\n");
}

//Mean
proc Mean(float $list[])
{
    float $start = Add($list);
    $start /= size($list);
    print ("The mean is: " + $start + "\n");
}

//Median
proc Median(float $list[])
{    
    float $sortedList[] = sort ($list);
    float $result = 0;

    // Find median, whether the size of list is odd or even.
    int $m = size($list);
    int $n = ($m / 2);  // Middle of the array.
    if ($m % 2)
    {
        $result = $sortedList[$n];
    }
    else
    {
        $result = ($sortedList[$n] + $sortedList[($n - 1)]) / 2;
    }

    print ($result);
}